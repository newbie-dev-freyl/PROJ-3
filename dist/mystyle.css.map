{"version":3,"sourceRoot":"","sources":["abstracts/_font-face.scss","base/_root.scss","abstracts/_mixins.scss","base/_reset.scss","base/_global.scss","components/_site-header.scss","abstracts/_tokens.scss","layouts/_even-columns.scss","layouts/_flex-base.scss","utils/_wrapper.scss","utils/_flow.scss","utils/_colors.scss"],"names":[],"mappings":"AAAQ;AACA;AACA;ACER;EAIgB;EAAA;EAAA;EAAA;EAYQ;EAAA;EAAA;EAAA;EAAA;EAAA;EAPR;EAAA;EAAA;EAAA;EAAA;EAAA;EAoBR;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAII;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAgBI;EAAA;EAAA;EAAA;EAAA;;AC/CZ;EDFJ;IAqB4B;IAAA;IAAA;IAAA;;;AAgBxB;EAIgB;EAAA;EAAA;EAAA;EAAA;EAAA;;;AE3CpB;EACI;;;AAGJ;EACI;EACA;EACA;;;AAGJ;EACI;EACA;EACA;;;AAGJ;EACI;;;AAGJ;EACI;EACA;EACA;EACA;;;AAGJ;EACI;EACA;;;AAGJ;AAAA;EAEI;;;AAGJ;EACI;;ADlCA;ECiCJ;IAIQ;;;;AAIR;EACI;;AD1CA;ECyCJ;IAIQ;;;;ACjDR;EACI;EACA;EACA;EACA;;AFAA;EEJJ;IAOQ;;;;AAKR;EACI;EACA;EACA;;;AAEJ;EACI;EACA;EACA;;;AAEJ;EACI;EACA;EACA;;;AAEJ;EACI;EACA;EACA;;;AC9BJ;EACI,YCKsB;;;ADF1B;EHMI;EACA;EACA,KAHmB;EGHf;EACA;;;AEPR;EACI;EACA;;ALEA;EKJJ;IAKQ;IACA;;;;ACNR;ENUI;EACA;EACA,KMXmB;EACf;;;ACFR;EACI;EACA;EAEA;EACA;;;AAGJ;EACI;;;AAGJ;EACI;;;ACfJ;EACI;;;ACGI;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AAKJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AAPJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AAKJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AAPJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AAKJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AAQA;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI","file":"mystyle.css","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Spectral+SC:wght@400;500;600;700;800&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@100..900&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap');","@use '../abstracts/' as *;\r\n\r\n\r\n\r\n:root {\r\n    @each $props, $data in $font-props {\r\n        @if $props == \"family\" {\r\n            @each $key, $value in $data {\r\n                --ff-#{$key}: #{$value};\r\n            }\r\n        \r\n        } @else if $props == \"weight\" {\r\n            @each $key, $value in $data {\r\n                --fw-#{$key}: #{$value};\r\n            }\r\n\r\n        } @else if $props == \"size\" {\r\n            @each $size, $sizes in $data {\r\n                @if $size == \"default\" {\r\n                    @each $key, $value in $sizes {\r\n                        --fs-#{$key}: #{$value};\r\n                    }\r\n                } @else {\r\n                    @include breakpoint(tablet) {\r\n                        @each $key, $value in $sizes {\r\n                            --fs-#{$key}: #{$value};\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }//FONT PROOPS\r\n    @each $size, $value in $spacing {\r\n        --#{$size}: #{$value};\r\n    }//SPACING\r\n    @each $theme, $colors in $color-theme {\r\n        @each $color, $value in $colors {\r\n            --clr-#{$theme}-#{$color}: #{$value};\r\n        }\r\n    }//COLORS\r\n\r\n    &[data-theme=dark] {\r\n        @each $theme, $colors in $theme {\r\n            @if $theme == \"dark\" {\r\n                @each $key, $value in $colors {\r\n                    --clr-#{$key}: #{$value};\r\n                }\r\n            }\r\n        }\r\n    }\r\n    @each $theme, $colors in $theme {\r\n        @if $theme == \"light\"  {\r\n            @each $key, $value in $colors {\r\n                --clr-#{$key}: #{$value};\r\n            }\r\n        }   \r\n    }//LIGHT & DARK THEME\r\n}\r\n\r\n","@use 'breakpoints' as *;\r\n\r\n\r\n@mixin breakpoint($key) {\r\n    $screen-size: map-get($breakpoints, $key);\r\n\r\n    @media screen and (min-width: $screen-size) {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin flex-base($gap: 0) {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: $gap;\r\n    @content;\r\n}","@use '../abstracts/' as *;\r\n\r\n*, *::before, *::after {\r\n    box-sizing: border-box;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    font: inherit;\r\n}\r\n\r\nhtml {\r\n    -moz-text-size-adjust: none;\r\n    -webkit-text-size-adjust: none;\r\n    text-size-adjust: none;\r\n}\r\n\r\nhtml:focus-within {\r\n    scroll-behavior: smooth;\r\n}\r\n\r\nbody {\r\n    height: 100%;\r\n    min-height: 100vh;\r\n    text-rendering: optimizeSpeed;\r\n    line-height: 1.5;\r\n}\r\n\r\nimg, svg, picture {\r\n    display: block;\r\n    max-width: 100%;\r\n}\r\n\r\nul[role=list], \r\nol[role=list] {\r\n    list-style: none;\r\n}\r\n\r\nh1, h2 {\r\n    line-height: .9;\r\n\r\n    @include breakpoint(tablet) {\r\n        line-height: .95;\r\n    }\r\n}\r\n\r\nh3, h4 {\r\n    line-height: 1;\r\n\r\n    @include breakpoint(tablet) {\r\n        line-height: 1.1;\r\n    }\r\n}\r\n","@use '../abstracts/' as *;\r\n\r\nbody {\r\n    background: $body-background-color;\r\n    color: $body-font-color;\r\n    font-family: $body-font-family;\r\n    font-size: 16px;\r\n\r\n    @include breakpoint(tablet) {\r\n        font-size: 18px;\r\n    }\r\n}\r\n\r\n//TYPOGRAPHY\r\nh1{\r\n    font-family: var(--ff-heading);\r\n    font-size: var(--fs-900);\r\n    font-weight: var(--fw-900);\r\n}\r\nh2{\r\n    font-family: var(--ff-heading);\r\n    font-size: var(--fs-800);\r\n    font-weight: var(--fw-800);\r\n}\r\nh3{\r\n    font-family: var(--ff-heading);\r\n    font-size: var(--fs-700);\r\n    font-weight: var(--fw-700);\r\n}\r\nh4{\r\n    font-family: var(--ff-heading);\r\n    font-size: var(--fs-600);\r\n    font-weight: var(--fw-700);\r\n}","@use '../abstracts/' as *;\r\n\r\n.header {\r\n    background: $header-background-color;\r\n}\r\n\r\n.header-inner {\r\n    @include flex-base() {\r\n        justify-content: space-between;\r\n        flex-wrap: wrap;\r\n    }\r\n}\r\n","@use 'breakpoints' as *;\r\n\r\n//BODY\r\n$body-background-color: var(--clr-background);\r\n$body-font-color: var(--clr-font);\r\n$body-font-family: var(--ff-primary);\r\n\r\n//HEADER\r\n$header-background-color: var(--clr-header);\r\n\r\n//WRAPPER \r\n$wrapper-margin-inline: var(--size-4);\r\n$wrapper-max-width: map-get($breakpoints, xl);\r\n$wrapper-max-width-narrow: map-get($breakpoints, desktop);","@use '../abstracts/' as *;\r\n\r\n.even-columns {\r\n    display: grid;\r\n    gap: var(--size-2);\r\n\r\n    @include breakpoint(tablet) {\r\n        grid-auto-flow: column;\r\n        grid-auto-columns: 1fr;\r\n    }\r\n}","@use '../abstracts/' as *;\r\n\r\n.flex-base {\r\n    @include flex-base(var(--size-1)) {\r\n        flex-wrap: wrap;\r\n    }\r\n}","@use '../abstracts/' as *;\r\n\r\n.wrapper {\r\n    --padding: #{$wrapper-margin-inline};\r\n    --max-width: #{$wrapper-max-width};\r\n\r\n    width: min(100% - var(--padding), var(--max-width));\r\n    margin-inline: auto;\r\n}\r\n\r\n.wrapper[data-variant=narrow] {\r\n    --max-width: #{$wrapper-max-width-narrow};\r\n}\r\n\r\n.wrapper[data-variant=full-bleed] {\r\n    --max-width: 100%\r\n}",".flow > :where(* + *) {\r\n    margin-top: var(--size-1);\r\n}","@use '../abstracts/' as *;\r\n\r\n@each $colors, $data in $color-theme {\r\n    @each $key, $value in $data {\r\n        .clr-#{$colors}-#{$key} {\r\n            color: var(--clr-#{$colors}-#{$key});\r\n        } \r\n    }\r\n\r\n    @each $key, $value in $data {\r\n        .bg-#{$colors}-#{$key} {\r\n            background-color: var(--clr-#{$colors}-#{$key});\r\n        } \r\n    }\r\n}\r\n\r\n@each $colors, $data in $theme {\r\n    @if $colors == \"dark\" {\r\n        @each $key, $value in $data {\r\n            .clr-#{$key} {\r\n                background-color: var(--clr-#{$key}) !important;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n"]}